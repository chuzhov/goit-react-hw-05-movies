{"version":3,"file":"static/js/494.dd9639e7.chunk.js","mappings":"4OAgFA,EA3EqB,WAAO,IAAD,QAEjBA,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MACjB,GAAkCC,EAAAA,EAAAA,UAAS,CAAEC,OAAQ,KAArD,eAAOC,EAAP,KAAkBC,EAAlB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WAEDR,IACLS,EAAAA,EAAAA,IAAaT,GACVU,MAAK,SAAAC,GACCA,GAAQA,EAAKX,KAAOA,GACzBO,EAAaI,EACd,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GAGjB,GAAE,CAACb,KAGF,4BACE,SAAC,KAAD,CAASgB,GAAE,oBAAEd,EAASe,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAKC,UAAU,UAApD,sBAIU,OAATb,QAAS,IAATA,OAAA,EAAAA,EAAWc,eACV,gBACEC,MAAO,CAAEC,QAAS,SAClBC,IAAG,UA3BM,mCA2BN,cAAgBjB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAWc,aAC9BI,IAAI,GACJC,MAAM,SAGV,2CACGnB,QADH,IACGA,OADH,EACGA,EAAWoB,aADd,QACuB,SACrB,kBAAML,MAAO,CAAEM,WAAY,QAASC,WAAY,OAAhD,cAEGC,UAAkB,OAATvB,QAAS,IAATA,OAAA,EAAAA,EAAWwB,gBAAX,OAA2BxB,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAWyB,kBAC9C,uBAHJ,WAOF,uCACc,IACF,OAATzB,QAAS,IAATA,GAAAA,EAAW0B,aACRC,OAAM,OAAC3B,QAAD,IAACA,OAAD,EAACA,EAAW0B,cAAcE,QAAQ,GACxC,cADA,OAEA5B,QAFA,IAEAA,OAFA,EAEAA,EAAW6B,YACX,SACA,oBAEN,sCACA,wCAAI7B,QAAJ,IAAIA,OAAJ,EAAIA,EAAW8B,gBAAf,QAA2B,8BAC3B,oCACA,8BAAI9B,QAAJ,IAAIA,OAAJ,EAAIA,EAAWD,OAAOgC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,SAEpD,iBAAKrB,UAAU,6BAAf,WACE,SAAC,KAAD,CAASH,GAAG,OAAOC,MAAOf,EAASe,MAAOE,UAAU,mBAApD,mBAIA,SAAC,KAAD,CACEH,GAAG,UACHC,MAAOf,EAASe,MAChBE,UAAU,mBAHZ,yBAQF,SAAC,EAAAsB,SAAD,CAAUC,UAAU,8CAApB,UACE,SAAC,KAAD,QAIP,C","sources":["pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { Suspense, useEffect, useState } from 'react';\nimport { NavLink, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieById } from 'utils/fetchAPI';\nimport './MovieDetails.css';\n\nconst MovieDetails = () => {\n  const BASE_URL = 'https://image.tmdb.org/t/p/w500';\n  const { id } = useParams();\n  const location = useLocation();\n  const [movieData, setMovieData] = useState({ genres: [] });\n\n  useEffect(() => {\n    const setUpMoviesDetails = () => {\n      if (!id) return;\n      getMovieById(id)\n        .then(data => {\n          if (!data || data.id === id) return;\n          setMovieData(data);\n        })\n        .catch(error => console.log(error));\n    };\n    setUpMoviesDetails();\n  }, [id]);\n\n  return (\n    <div>\n      <NavLink to={location.state?.from ?? '/'} className=\"go-back\">\n        Go back\n      </NavLink>\n\n      {movieData?.poster_path && (\n        <img\n          style={{ display: 'block' }}\n          src={`${BASE_URL}${movieData?.poster_path}`}\n          alt=\"\"\n          width=\"180\"\n        />\n      )}\n      <h2>\n        {movieData?.title ?? 'Movie'}\n        <span style={{ marginLeft: '0.5em', fontWeight: '400' }}>\n          (\n          {parseInt(movieData?.release_date || movieData?.first_air_date) ||\n            'Once apone a time...'}\n          )\n        </span>\n      </h2>\n      <p>\n        User score:{' '}\n        {movieData?.vote_average\n          ? Number(movieData?.vote_average).toFixed(1) +\n            ' based on ' +\n            movieData?.vote_count +\n            ' votes'\n          : 'not rated yet'}\n      </p>\n      <h3>Overview</h3>\n      <p>{movieData?.overview ?? 'There is no overview yet'}</p>\n      <h3>Genres</h3>\n      <p>{movieData?.genres.map(genre => genre.name).join(', ')}</p>\n\n      <div className=\"movie-details__nav-wrapper\">\n        <NavLink to=\"cast\" state={location.state} className=\"movie-menu__link\">\n          Cast\n        </NavLink>\n\n        <NavLink\n          to=\"reviews\"\n          state={location.state}\n          className=\"movie-menu__link\"\n        >\n          Reviews\n        </NavLink>\n      </div>\n      <Suspense fallback={<p>Loading reviews...</p>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\nexport default MovieDetails;\n"],"names":["id","useParams","location","useLocation","useState","genres","movieData","setMovieData","useEffect","getMovieById","then","data","catch","error","console","log","to","state","from","className","poster_path","style","display","src","alt","width","title","marginLeft","fontWeight","parseInt","release_date","first_air_date","vote_average","Number","toFixed","vote_count","overview","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}