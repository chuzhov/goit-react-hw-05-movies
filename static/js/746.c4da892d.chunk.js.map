{"version":3,"file":"static/js/746.c4da892d.chunk.js","mappings":"0NAmCA,EA/BmB,SAAC,GAA2B,IAAzBA,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UACtBC,EAAWF,EAAOG,IAAI,SAC5B,GAA0BC,EAAAA,EAAAA,UAASF,GAAY,IAA/C,eAAOG,EAAP,KAAcC,EAAd,KAQA,OACE,kBAAMC,UAAU,GAAGC,MAAO,CAAEC,aAAc,QAAUC,SAPjC,SAAAC,GACnBA,EAAMC,iBACDP,GACLJ,EAAU,CAAEY,MAAOR,GACpB,EAGC,WACE,kBACEE,UAAU,GACVC,MAAO,CAAEM,MAAO,SAChBC,KAAK,OACLC,KAAK,QACLC,MAAOZ,EACPa,YAAY,sBACZC,SAAU,SAAAR,GAAK,OAAIL,EAASK,EAAMS,OAAOH,MAA1B,KAEjB,mBAAQF,KAAK,SAAb,sBAGL,E,6CC3BD,EAA4B,iCAA5B,EAA6E,qCC+D7E,EAxDsB,SAAC,GAA2B,IAAzBf,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UACzBY,EAAQb,EAAOG,IAAI,SAIzB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOiB,EAAP,KAAeC,EAAf,KACA,GAAwClB,EAAAA,EAAAA,UAAS,GAAjD,eAAOmB,EAAP,KAAqBC,EAArB,KACA,GAAwBpB,EAAAA,EAAAA,UAAS,GAAjC,eAAOqB,EAAP,KAAaC,EAAb,MASAC,EAAAA,EAAAA,YAAU,WACR,GAAKd,EAAL,EAGEe,EAAAA,EAAAA,IAAiBf,EAAOY,GACrBI,MAAK,SAAAC,GACJR,GAAU,SAAAD,GAAM,OACL,IAATI,EAAaK,EAAKC,QAAlB,kBAAgCV,IAAhC,OAA2CS,EAAKC,SADlC,IAGP,IAATN,GAAcD,EAAgBM,EAAKE,cACpC,IACAC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,GAVI,CAenB,GAAE,CAACT,EAAMZ,IAEV,IAAMwB,GAAWC,EAAAA,EAAAA,MAEjB,OACE,iBAAK/B,UAAWgC,EAAhB,WACE,eAAIhC,UAAWgC,EAAf,SACGlB,EAAOmB,KAAI,SAAAC,GAAK,OACf,SAACC,EAAA,EAAD,CAA0BC,UAAWF,EAAOJ,SAAUA,GAAtCI,EAAMG,GADP,MAKlBvB,EAAOwB,OAAS,GAAKxB,EAAOwB,OAAStB,IACpC,SAACuB,EAAA,EAAD,CAAQC,QAnCK,WAEjB9C,EAAU,CAAEY,MAAAA,IACZa,GAAQ,SAAAD,GAAI,OAAIA,EAAO,CAAX,GACb,MAmCF,EC1CD,EAXe,WACb,OAAkCuB,EAAAA,EAAAA,MAAlC,eAAOhD,EAAP,KAAeiD,EAAf,KAEA,OACE,iBAAK1C,UAAU,cAAf,WACE,SAAC,EAAD,CAAYP,OAAQA,EAAQC,UAAWgD,KACvC,SAAC,EAAD,CAAejD,OAAQA,EAAQC,UAAWgD,MAG/C,C","sources":["components/SearchForm/SearchForm.jsx","webpack://GO IT! React Homework 05/./src/components/MoviesGallery/MoviesGallery.module.css?276e","components/MoviesGallery/MoviesGallery.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\n//import css from \"./SearchForm.module.scss\";\n\nconst SearchForm = ({ search, setSearch }) => {\n  const oldQuery = search.get('query');\n  const [input, setInput] = useState(oldQuery || '');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (!input) return;\n    setSearch({ query: input });\n  };\n\n  return (\n    <form className=\"\" style={{ marginBottom: '1rem' }} onSubmit={handleSubmit}>\n      <input\n        className=\"\"\n        style={{ width: '300px' }}\n        type=\"text\"\n        name=\"input\"\n        value={input}\n        placeholder=\"Enter movie name...\"\n        onChange={event => setInput(event.target.value)}\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nSearchForm.propTypes = {\n  search: PropTypes.object.isRequired,\n  setSearch: PropTypes.func.isRequired,\n};\n\nexport default SearchForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MoviesGallery_container__p0OR5\",\"movie-gallery\":\"MoviesGallery_movie-gallery__OGmcT\"};","import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { getMoviesByQuery } from 'utils/fetchAPI';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport Button from '../Button/Button';\nimport css from './MoviesGallery.module.css';\n\nconst MoviesGallery = ({ search, setSearch }) => {\n  const query = search.get('query');\n\n  //  const page = Number(search.get(\"page\"));\n\n  const [movies, setMovies] = useState([]);\n  const [totalResults, setTotalResults] = useState(0);\n  const [page, setPage] = useState(1); //getting page from state nor from search\n  // const [isLoading, setIsLoading] = useState(false);\n\n  const updatePage = () => {\n    //  setSearch({ query, page: page + 1 });\n    setSearch({ query });\n    setPage(page => page + 1);\n  };\n\n  useEffect(() => {\n    if (!query) return;\n    const updateSearch = () => {\n      //    setIsLoading(true);\n      getMoviesByQuery(query, page)\n        .then(data => {\n          setMovies(movies =>\n            page === 1 ? data.results : [...movies, ...data.results]\n          );\n          page === 1 && setTotalResults(data.total_results);\n        })\n        .catch(err => console.log(err));\n      //       .finally(() => setIsLoading(false));\n    };\n\n    updateSearch();\n  }, [page, query]);\n\n  const location = useLocation();\n\n  return (\n    <div className={css['container']}>\n      <ul className={css['movie-gallery']}>\n        {movies.map(movie => (\n          <MovieCard key={movie.id} movieData={movie} location={location} />\n        ))}\n      </ul>\n\n      {movies.length > 0 && movies.length < totalResults && (\n        <Button onClick={updatePage} />\n      )}\n    </div>\n  );\n};\n\nMoviesGallery.propTypes = {\n  search: PropTypes.object.isRequired,\n  setSearch: PropTypes.func.isRequired,\n};\n\nexport default MoviesGallery;\n","import { useSearchParams } from 'react-router-dom';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport MoviesGallery from 'components/MoviesGallery/MoviesGallery';\n\nconst Movies = () => {\n  const [search, setSearchParams] = useSearchParams();\n\n  return (\n    <div className=\"movies-page\">\n      <SearchForm search={search} setSearch={setSearchParams} />\n      <MoviesGallery search={search} setSearch={setSearchParams} />\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["search","setSearch","oldQuery","get","useState","input","setInput","className","style","marginBottom","onSubmit","event","preventDefault","query","width","type","name","value","placeholder","onChange","target","movies","setMovies","totalResults","setTotalResults","page","setPage","useEffect","getMoviesByQuery","then","data","results","total_results","catch","err","console","log","location","useLocation","css","map","movie","MovieCard","movieData","id","length","Button","onClick","useSearchParams","setSearchParams"],"sourceRoot":""}