{"version":3,"file":"static/js/494.2989a46e.chunk.js","mappings":"4OAsFA,EA3EqB,WAAO,IAAD,QAEjBA,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MACjB,GAAkCC,EAAAA,EAAAA,UAAS,CAAEC,OAAQ,KAArD,eAAOC,EAAP,KAAkBC,EAAlB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,YAGNC,EAAAA,EAAAA,IAAaT,GACVU,MAAK,SAAAC,GACCA,GAAQA,EAAKX,KAAOA,GACzBO,EAAaI,EACd,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GAGjB,GAAE,CAACb,KAGF,iBAAKgB,MAAO,CAAEC,MAAO,SAArB,WACE,SAAC,KAAD,CAAMC,GAAE,oBAAEhB,EAASiB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAKC,UAAU,UAAjD,sBAIU,OAATf,QAAS,IAATA,OAAA,EAAAA,EAAWgB,eACV,gBACEN,MAAO,CAAEO,QAAS,SAClBC,IAAG,UA3BM,mCA2BN,cAAgBlB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAWgB,aAC9BG,IAAI,GACJC,MAAM,SAGV,2CACGpB,QADH,IACGA,OADH,EACGA,EAAWqB,aADd,QACuB,SACrB,kBAAMX,MAAO,CAAEY,WAAY,QAASC,WAAY,OAAhD,cAEGC,UAAkB,OAATxB,QAAS,IAATA,OAAA,EAAAA,EAAWyB,gBAAX,OAA2BzB,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAW0B,kBAC9C,uBAHJ,WAOF,uCACc,IACF,OAAT1B,QAAS,IAATA,GAAAA,EAAW2B,aACRC,OAAM,OAAC5B,QAAD,IAACA,OAAD,EAACA,EAAW2B,cAAcE,QAAQ,GACxC,cADA,OAEA7B,QAFA,IAEAA,OAFA,EAEAA,EAAW8B,YACX,SACA,oBAEN,sCACA,wCAAI9B,QAAJ,IAAIA,OAAJ,EAAIA,EAAW+B,gBAAf,QAA2B,8BAC3B,oCACA,8BAAI/B,QAAJ,IAAIA,OAAJ,EAAIA,EAAWD,OAAOiC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,SAEpD,iBAAKpB,UAAU,6BAAf,WACE,SAAC,KAAD,CAASH,GAAG,OAAOC,MAAOjB,EAASiB,MAAOE,UAAU,mBAApD,mBAIA,SAAC,KAAD,CACEH,GAAG,UACHC,MAAOjB,EAASiB,MAChBE,UAAU,mBAHZ,yBAQF,SAAC,EAAAqB,SAAD,CAAUC,UAAU,8CAApB,UACE,SAAC,KAAD,QAIP,C","sources":["pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { Suspense, useEffect, useState } from 'react';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { getMovieById } from 'utils/fetchAPI';\nimport './MovieDetails.css';\n\nconst MovieDetails = () => {\n  const BASE_URL = 'https://image.tmdb.org/t/p/w500';\n  const { id } = useParams();\n  const location = useLocation();\n  const [movieData, setMovieData] = useState({ genres: [] });\n\n  useEffect(() => {\n    const setUpMoviesDetails = () => {\n      //     if (movieData.genres.length > 0) return;\n      getMovieById(id)\n        .then(data => {\n          if (!data || data.id === id) return;\n          setMovieData(data);\n        })\n        .catch(error => console.log(error));\n    };\n    setUpMoviesDetails();\n  }, [id]);\n\n  return (\n    <div style={{ color: 'white' }}>\n      <Link to={location.state?.from ?? '/'} className=\"go-back\">\n        Go back\n      </Link>\n\n      {movieData?.poster_path && (\n        <img\n          style={{ display: 'block' }}\n          src={`${BASE_URL}${movieData?.poster_path}`}\n          alt=\"\"\n          width=\"180\"\n        />\n      )}\n      <h2>\n        {movieData?.title ?? 'Movie'}\n        <span style={{ marginLeft: '0.5em', fontWeight: '400' }}>\n          (\n          {parseInt(movieData?.release_date || movieData?.first_air_date) ||\n            'Once apone a time...'}\n          )\n        </span>\n      </h2>\n      <p>\n        User score:{' '}\n        {movieData?.vote_average\n          ? Number(movieData?.vote_average).toFixed(1) +\n            ' based on ' +\n            movieData?.vote_count +\n            ' votes'\n          : 'not rated yet'}\n      </p>\n      <h3>Overview</h3>\n      <p>{movieData?.overview ?? 'There is no overview yet'}</p>\n      <h3>Genres</h3>\n      <p>{movieData?.genres.map(genre => genre.name).join(', ')}</p>\n\n      <div className=\"movie-details__nav-wrapper\">\n        <NavLink to=\"cast\" state={location.state} className=\"movie-menu__link\">\n          Cast\n        </NavLink>\n\n        <NavLink\n          to=\"reviews\"\n          state={location.state}\n          className=\"movie-menu__link\"\n        >\n          Reviews\n        </NavLink>\n      </div>\n      <Suspense fallback={<p>Loading reviews...</p>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\nexport default MovieDetails;\n"],"names":["id","useParams","location","useLocation","useState","genres","movieData","setMovieData","useEffect","getMovieById","then","data","catch","error","console","log","style","color","to","state","from","className","poster_path","display","src","alt","width","title","marginLeft","fontWeight","parseInt","release_date","first_air_date","vote_average","Number","toFixed","vote_count","overview","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}